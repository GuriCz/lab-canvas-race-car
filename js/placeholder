window.onload = () => {
  document.getElementById("start-button").onclick = () => {
    startGame();
  };
  var img = new Image();
  img.src = "images/road.png";
  var carImg = new Image();
  carImg.src = "images/car.png";
  let obstacles = [];

function spawnObstacle() {

  const obstacleX = Math.floor(Math.random() * 400);
  const maxWidth = 400; // maximum width of the obstacle
  const minWidth = 30;
  const obstacleWidth = Math.floor(Math.random() * (maxWidth - minWidth + 1)) + minWidth;
  obstacles.push({
    x: obstacleX,
    y: 0,
    width: obstacleWidth, 
    height: 50, 
  });
}


// Call the spawnObstacle function at an interval to create new obstacles
setInterval(spawnObstacle, 2000); // Change 2000 to the interval you want to spawn obstacles at


  function startGame() {
    let carX = 200;
    let carY = 500;
    const theCanvas = document.getElementById("canvas");
    const ctx = theCanvas.getContext("2d");
    ctx.clearRect(0, 0, 400, 800);
    ctx.drawImage(img, 0, 0, 400, 800);
    ctx.drawImage(carImg, carX, carY, 40, 80);

    document.addEventListener("keydown", function (event) {
      event.preventDefault();
      const key = event.key; // "ArrowRight", "ArrowLeft", "ArrowUp", or "ArrowDown"
      switch (key) {
        case "ArrowLeft":
          // Left pressed
          carX -= 10;
          break;
        case "ArrowRight":
          // Right pressed
          carX += 10;
          break;
        case "ArrowUp":
          // Up pressed
          carY -= 10;
          break;
        case "ArrowDown":
          // Down pressed
          carY += 10;
          break;
      }
      ctx.clearRect(0, 0, 400, 800);
      ctx.drawImage(img, 0, 0, 400, 800);
      ctx.drawImage(carImg, carX, carY, 40, 80);
      obstacles.forEach((obstacle) => {
        ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);
      });
    });
    setInterval(() => {
      ctx.clearRect(0, 0, 400, 800);
      ctx.drawImage(img, 0, 0, 400, 800);
      ctx.drawImage(carImg, carX, carY, 40, 80);
      
      obstacles.forEach((obstacle, index) => {
        obstacle.y += 5;
        ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);
        
        // Remove obstacle if it has reached the bottom of the canvas
        if (obstacle.y > 800) {
          obstacles.splice(index, 1);
        }
      });
    }, 50);
  }
};

